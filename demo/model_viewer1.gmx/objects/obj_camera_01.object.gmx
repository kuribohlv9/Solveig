<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();
d3d_set_hidden(true);
d3d_set_lighting(true);
d3d_set_culling(false);
texture_set_interpolation(true);
d3d_set_fog(true,c_white,100,1000);

d3d_light_define_direction(1,7.5,-7.5,-7,c_white);
d3d_light_enable(1,true);

z = 10;

x_goal = x;
y_goal = y;
z_goal = z;

angle = 0;
angle_goal = 270;

dist = 30;
dist_goal = 30;

window_mouse_set(window_get_width()/2,window_get_height()/2);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_goal = 0 + lengthdir_x(dist,angle);
y_goal = 0 + lengthdir_y(dist,angle);

var xdist,ydist;
xdist = window_mouse_get_x() - window_get_width()/2;
ydist = window_mouse_get_y() - window_get_height()/2;
angle_goal += xdist / 3;
dist_goal += ydist / 10;
window_mouse_set(window_get_width()/2,window_get_height()/2);

if (dist_goal &lt; 1){dist_goal = 1;}

if (x &lt; x_goal){x += ((x_goal-x)* .07);}
if (x &gt; x_goal){x -= ((x - x_goal)* .07);}

if (y &lt; y_goal){y += ((y_goal-y)* .07);}
if (y &gt; y_goal){y -= ((y - y_goal)* .07);}

if (z &lt; z_goal){z += ((z_goal-z)* .07);}
if (z &gt; z_goal){z -= ((z - z_goal)* .07);}


if (scr_compare_angles(angle,angle_goal) &lt; 0){angle += ((angle_goal-angle)* .08);}
if (scr_compare_angles(angle,angle_goal) &gt; 0){angle -= ((angle - angle_goal)* .08);}

if (dist &lt; dist_goal){dist+= ((dist_goal-dist)* .07);}
if (dist&gt; dist_goal){dist-= ((dist- dist_goal)* .07);}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_projection_ext(x,y,z,0,0,0,0,0,1,45,(4/3),1,32000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
